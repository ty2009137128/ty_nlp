
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import logging

import pymysql


def connect_wxremit_db():
    return pymysql.connect(host='127.0.0.1',
                           port=3306,
                           user='root',
                           password='123456',
                           database='zhihu_new',
                           charset='utf8')


def query(cc2):
    sql_str = ("select * from question_ans where ans_id='%s'" % (cc2))
    logging.info(sql_str)

    con = connect_wxremit_db()
    cur = con.cursor()
    cur.execute(sql_str)
    rows = cur.fetchall()
    cur.close()
    con.close()

    assert len(rows) == 1, 'Fatal error: country_code does not exists!'
    return rows

def query():
    sql_str = "select * from question_ans limit 1"
    logging.info(sql_str)
    con = connect_wxremit_db()
    cur = con.cursor()
    cur.execute(sql_str)
    rows = cur.fetchall()
    cur.close()
    con.close()

    #assert len(rows) == 1, 'Fatal error: country_code does not exists!'
    return rows


def insert_file_rec(self, file_name, file_md5):
    con = connect_wxremit_db()
    cur = con.cursor()
    try:
        sql_str = ("INSERT INTO t_forward_file (Ffile_name, Ffile_md5)",
                   + " VALUES ('%s', '%s')" % (file_name, file_md5))
        cur.execute(sql_str)
        con.commit()
    except:
        con.rollback()
        logging.exception('Insert operation error')
        raise
    finally:
        cur.close()
        con.close()


def update_refund_trans(self, remit_id):
    con = connect_wxremit_db()
    cur = con.cursor()
    try:
        sql_str = ("SELECT Fremit_id"
                   + " FROM t_wxrefund_trans"
                   + " WHERE Fremit_id='%s'" % remit_id
                   + " FOR UPDATE")
        logging.info(sql_str)

        cur.execute(sql_str)
        assert cur.rowcount == 1, 'Fatal error: The wx-refund record be deleted!'

        sql_str = ("UPDATE t_wxrefund_trans"
                   + " SET Fcheck_amount_flag=1"
                   + ", Fmodify_time=now()"
                   + " WHERE Fremit_id='%s'" % remit_id)
        logging.info(sql_str)
        cur.execute(sql_str)

        assert cur.rowcount == 1, 'The number of affected rows not equal to 1'
        con.commit()
    except:
        con.rollback()
        logging.exception('Update operation error')
        raise
    finally:
        cur.close()
        con.close()


if __name__ == '__main__':
    print query(30010900)

